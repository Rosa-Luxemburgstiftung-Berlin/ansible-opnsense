---

# Remote path of the config.
config_path: /conf/config.xml

# Where the unaltered device config gets fetched to. Not changed within one role run.
local_config_path_fetch: /tmp/config-{{ inventory_hostname }}.xml

# Local path for the config.
local_config_path: /tmp/config-{{ inventory_hostname }}.xml

# list of keys per task to sort values
opn_sort_values:
  filter:
    - interface

# unset handlers: regex to match in opn_unset -> handler to call
opn_unset_handlers:
  '^ipsec$': 'stop ipsec'

# default values for opn_openvpn_instances
opn_openvpn_instances_defaults:
  enabled: 1
  dev_type: tun
  verb: 3
  proto: udp
  topology: subnet
  role: server
  register_dns: 0
  verify_client_cert: require
  use_ocsp: 0
  username_as_common_name: 0
  strictusercn: 0

# defaults for opn_openvpn_overwrites
opn_openvpn_overwrites_defaults:
  enabled: 1
  block: 0
  push_reset: 0
  register_dns: 0

opn_unboundplus_uuid_sections:
  dots: dot
  hosts: host
  aliases: alias
  domains: domain
  acls: acl

opn_cron_jobs_defaults:
  origin: cron
  enabled: 1
  minutes: 0
  hours: 0
  days: '*'
  months: '*'
  weekdays: '*'
  who: root
  parameters:

# `xml_patch` and `xml_template` are supported.
opnsense_mode: 'xml_patch'

# The config.xml template to use when in `xml_template` mode.
opnsense_template: 'conf/config_netbox.xml.j2'

# Packages to install by default. This list is merged with the packages of the
# device and included in the config.
opnsense_packages: []

opnsense_all_packages: '{{ (opnsense_packages + (lookup("xmlfile", local_config_path_leader, xpath="//opnsense/system/firmware/plugins//text()").split(","))) | sort | unique }}'

# In `xml_template` mode you could have the concept of a leader Firewall from
# which certain config parts are included into generated configuration. See
# ../templates/conf/config_netbox.xml.j2.
local_config_path_leader: '{{ (inventory_dir + "/../..") | realpath }}/opnsense/leader-fw.example.net/config_device.xml'

...
