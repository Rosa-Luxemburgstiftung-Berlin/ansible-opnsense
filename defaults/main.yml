---

# remote path of the config
config_path: /conf/config.xml

# local path for the config
local_config_path: /tmp/config-{{ inventory_hostname }}.xml

# set this to true in order to adjust the encoding of the xml before uploading it
# recommendet to set this to true!
# requires php-cli and php-xml to be installed on the ansible runner
opn_fix_xml_encoding: false

# list of keys per task to sort values
opn_sort_values:
  filter:
    - interface

# unset handlers: regex to match in opn_unset -> handler to call
opn_unset_handlers:
  '^ipsec$': 'stop ipsec'

# default values for opn_openvpn_instances
opn_openvpn_instances_defaults:
  enabled: 1
  dev_type: tun
  verb: 3
  proto: udp
  topology: subnet
  role: server
  register_dns: 0
  verify_client_cert: require
  use_ocsp: 0
  username_as_common_name: 0
  strictusercn: 0

# defaults for opn_openvpn_overwrites
opn_openvpn_overwrites_defaults:
  enabled: 1
  block: 0
  push_reset: 0
  register_dns: 0

opn_unboundplus_uuid_sections:
  dots: dot
  hosts: host
  aliases: alias
  # domains: domains / domain is gone in favor of dots : see #111
  acls: acl

# defaults for some elements
opn_unboundplus_uuid_sections_defaults:
  dots:
    dot:
      enabled: 1
      type: forward
      port:
      verify:
      forward_tcp_upstream: 0
      description:

opn_cron_jobs_defaults:
  origin: cron
  enabled: 1
  minutes: 0
  hours: 0
  days: '*'
  months: '*'
  weekdays: '*'
  who: root
  parameters:

#######################
# sync user from ldap #
#######################
opn_sync_users_from_ldap: false
opn_sync_users_ldap_url: ldaps://dc.example.org
opn_sync_users_ldap_scope: sub  # one|sub|base
opn_sync_users_ldap_basedn: OU=Users,...

# ldap auth params
opn_sync_users_ldap_auth: []
# example opn_sync_users_ldap_auth
# opn_sync_users_ldap_auth:
#  - --user=ldapaccount
#  - --workgroup=WGP
#  - --password={{ ldappw }}
# and define the ldappw vaulted
# ldappw: !vault | ...

# additional args for ldbsearch
opn_sync_users_ldap_args:
  - '--show-binary'
  - '--sorted'

# ldap fields to fetch and map to opn user
# map of opnsense user field -> ldap field
opn_sync_users_ldap_fields:
  name: sAMAccountName
  descr: cn
  email: mail
# otp_seed: anotherLdapAttribute

# map of opnsense user field -> map of reges search -> replace to manipulate the value
opn_sync_users_ldap_fields_jinja2regexreplace: {}
# example
# opn_sync_users_ldap_fields_jinja2regexreplace:
#   otp_seed:
#     '#@[-+_.a-zA-Z0-9]*=': ''
#     '&.*': ''
# this will be evaluated to the equivalent of:
# ... | regex_replace('#@[-+_.a-zA-Z0-9]*=', '') | regex_replace('&.*', '')

# ldap filter
opn_sync_users_ldap_filter: '(&(objectCategory=organizationalPerson)(objectClass=User)(userAccountControl:1.2.840.113556.1.4.803:=512)(!(|(userAccountControl:1.2.840.113556.1.4.803:=2)(userAccountControl:1.2.840.113556.1.4.803:=32))))'  # noqa yaml[line-length]

...
