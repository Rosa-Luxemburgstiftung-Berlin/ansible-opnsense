---
# example:
#
# opn_gateways:
#   - interface: WAN1
#     settings:
#       - key: gateway
#         value: 192.168.22.1
#       - key: name
#         value: GW_WAN1
#       - key: weight
#         value: 1
#       - key: ipprotocol
#         value: inet
#   - interface: WAN2
#     settings:
#       - key: gateway
#         value: 192.168.44.1
#       - key: name
#         value: GW_WAN2
#       - key: weight
#         value: 2
#       - key: ipprotocol
#         value: inet
#
# opn_gateway_groups:
#   - name: GW_WAN
#     settings:
#       - item: "GW_WAN1|1"
#       - item: "GW_WAN2|2"
#       - trigger: down
#       - descr: WAN gateway group
#

- name: remove default empty gateways node
  delegate_to: localhost
  community.general.xml:
    path: "{{ local_config_path }}"
    xpath: /opnsense/gateways/gateway_item[not(node())]
    state: absent
  when:
    - opn_gateways is defined
    - opn_gateways | length > 0

- name: gateways
  delegate_to: localhost
  community.general.xml:
    path: "{{ local_config_path }}"
    xpath: /opnsense/gateways/gateway_item[interface/text()="{{ item.0.interface }}"]/{{ item.1.key }}
    value: "{{ item.1.value }}"
    pretty_print: true
  with_subelements:
    - "{{ opn_gateways | default([]) }}"
    - settings
  when: item.0.name is not defined

# in order to allow multiple GW definitions per iface
# use a name per iface (should be the same as in settings
# opn_gateways:
#  - interface: fwlink
#    name: GW_01
#    settings:
#      - key: gateway
#        value: 192.168.0.2
#      - key: name
#        value: GW_01
#      - key: weight
#        value: 1
#      - key: ipprotocol
#        value: inet
#  - interface: fwlink
#    name: GW_02
#    settings:
#      - key: gateway
#        value: 192.168.0.3
#      - key: name
#        value: GW_02
#      - key: weight
#        value: 1
#      - key: ipprotocol
#        value: inet

# FIXME: in fact a definition as a dict would make like easier:
#  - interface: fwlink
#    name: GW_02
#    gateway: 192.168.0.3
#    weight: 1
#    ipprotocol: inet


- name: gateways with name per iface
  delegate_to: localhost
  community.general.xml:
    path: "{{ local_config_path }}"
    xpath: /opnsense/gateways/gateway_item[interface/text()="{{ item.0.interface }}" and name/text()="{{ item.0.name }}"]/{{ item.1.key }}
    value: "{{ item.1.value }}"
    pretty_print: true
  with_subelements:
    - "{{ opn_gateways | default([]) }}"
    - settings
  when: item.0.name is defined

- name: gateway groups
  delegate_to: localhost
  community.general.xml:
    path: "{{ local_config_path }}"
    xpath: /opnsense/gateways/gateway_group[name/text()="{{ item.name }}"]
    pretty_print: true
  with_items: "{{ opn_gateway_groups | default([]) }}"

- name: gateway groups settings
  delegate_to: localhost
  community.general.xml:
    path: "{{ local_config_path }}"
    xpath: /opnsense/gateways/gateway_group[name/text()="{{ item.name }}"]
    set_children: "{{ item.settings + [{'name': item.name}] }}"
    pretty_print: true
  with_items: "{{ opn_gateway_groups | default([]) }}"

...
