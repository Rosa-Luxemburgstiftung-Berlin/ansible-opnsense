# vim: tabstop=2 expandtab shiftwidth=2 softtabstop=2 smartindent nu ft=yaml
---

- name: "IPSec ike phase1 for ikeid {{ ikeid }}"
  delegate_to: localhost
  community.general.xml:
    path: "{{ local_config_path }}"
    xpath: "/opnsense/ipsec/phase1[ikeid/text()='{{ ikeid }}']/{{ item.key }}"
    value: "{{ item.value }}"
    pretty_print: true
  with_dict:
    - "{{ ipsecphasevar.phase1 | default({}) }}"
  when:
    - not item.key == 'encryption-algorithm'
    - not (item.key == 'disabled' and item.value|int != 1)

- name: "IPSec ike phase1 for ikeid {{ ikeid }} enable"
  delegate_to: localhost
  community.general.xml:
    path: "{{ local_config_path }}"
    xpath: "/opnsense/ipsec/phase1[ikeid/text()='{{ ikeid }}']/{{ item.key }}"
    state: absent
    pretty_print: true
  with_dict:
    - "{{ ipsecphasevar.phase1 | default({}) }}"
  when:
    - item.key == 'disabled' and item.value|int != 1

- name: "IPSec ike phase1 encryption-algorithm for ikeid {{ ikeid }}"
  delegate_to: localhost
  community.general.xml:
    path: "{{ local_config_path }}"
    xpath: "/opnsense/ipsec/phase1[ikeid/text()='{{ ikeid }}']/encryption-algorithm/{{ item.key }}"
    value: "{{ item.value }}"
    pretty_print: true
  with_dict:
    - "{{ ipsecphasevar.phase1['encryption-algorithm'] | default({}) }}"

- name: "IPSec ike phase2 count ..."
  delegate_to: localhost
  community.general.xml:
    path: "{{ local_config_path }}"
    xpath: "/opnsense/ipsec/phase2"
    count: true
  register: phase2_count
- name: debug phase2_count
  ansible.builtin.debug:
    var: phase2_count
    verbosity: 1

- name: "IPSec ike phase2 : check {{ uniqid }} ikeid {{ ikeid }}"
  delegate_to: localhost
  community.general.xml:
    path: "{{ local_config_path }}"
    xpath: "/opnsense/ipsec/phase2[ikeid='{{ ikeid }}']/uniqid[text()='{{ item.key }}']"
    count: true
  register: phase2ikeiduniqid_count
  with_dict:
    - "{{ ipsecphasevar.phase2 }}"
- name: debug phase2ikeiduniqid_count
  ansible.builtin.debug:
    var: phase2ikeiduniqid_count
    verbosity: 1

- name: "IPSec ike phase2 set uniqid for ikeid {{ ikeid }}"
  delegate_to: localhost
  community.general.xml:
    path: "{{ local_config_path }}"
    xpath: "/opnsense/ipsec"
    add_children:
      - "<phase2><ikeid>{{ ikeid }}</ikeid><uniqid>{{ item.item.key }}</uniqid></phase2>"
    input_type: xml
    pretty_print: true
  when: item.count == 0
  with_items: "{{ phase2ikeiduniqid_count.results }}"

- name: "loop IPSec ike phase2 for ikeid {{ ikeid }}"
  ansible.builtin.include_tasks: ipsecphase2.yml
  vars:
    uniqid: "{{ p2.key }}"
    ipsecphasevar2: "{{ {p2.key: ipsecphasevar.phase2_defaults | default({})} | combine(ipsecphasevar.phase2, recursive=true) }}"
  with_dict:
    - "{{ ipsecphasevar.phase2 }}"
  loop_control:
    loop_var: p2

...
