---

# to add a new user , you must user something like:
# opn_user:
#   - name: ruth
#     uuid: ... (optional)
#     settings:
#       - key: uid
#         value: 1000
#       - key: password
#         value: "$...."
#       - key: authorizedkeys
#         b64_value: |
#           ssh-rsa ....
#       - key: groupname
#         value: admins
#       - key: shell
#         value: /usr/local/bin/bash
#
# opn_group:
#   - name: admins
#     settings:
#       - key: member
#         value: 0  # root
#       - key: member
#         value: 1000  # ruth

- name: ensure required facts are available
  ansible.builtin.fail:
    msg: opnsense user handling requires role ansible-opnsense-factse
  when:
    - ansible_local.opnsense.core.product_version is not defined
    - opn_user is defined and opn_user

- name: user name (by uuid)
  delegate_to: localhost
  community.general.xml:
    path: "{{ local_config_path }}"
    xpath: "/opnsense/system/user[@uuid='{{ item.uuid }}']/name"
    value: "{{ item.name }}"
    pretty_print: true
  with_items:
    - "{{ opn_user | default([]) }}"
  notify: local user sync
  when:
    - item.uuid is defined
    - item.name is defined
    - ansible_local.opnsense.core.product_version is version_compare('25.1', '>=')

- name: user settings (by uuid)
  delegate_to: localhost
  community.general.xml:
    path: "{{ local_config_path }}"
    xpath: "/opnsense/system/user[@uuid='{{ item.0.uuid }}']/{{ item.1.key }}"
    value: "{{ item.1.value }}"
    pretty_print: true
  with_subelements:
    - "{{ opn_user | default([]) }}"
    - settings
  notify: local user sync
  when:
    - item.0.uuid is defined
    - ansible_local.opnsense.core.product_version is version_compare('25.1', '>=')
    - item.1.value is defined

- name: b64 user fields (by uuid)
  delegate_to: localhost
  community.general.xml:
    path: "{{ local_config_path }}"
    xpath: "/opnsense/system/user[@uuid='{{ item.0.uuid }}']/{{ item.1.key }}"
    value: "{{ item.1.b64_value | b64encode }}"
    pretty_print: true
  with_subelements:
    - "{{ opn_user | default([]) }}"
    - settings
  notify: local user sync
  when:
    - item.0.uuid is defined
    - ansible_local.opnsense.core.product_version is version_compare('25.1', '>=')
    - item.1.b64_value is defined

- name: user (legacy by name)
  delegate_to: localhost
  community.general.xml:
    path: "{{ local_config_path }}"
    xpath: "/opnsense/system/user[name/text()='{{ item.0.name }}']/{{ item.1.key }}"
    value: "{{ item.1.value }}"
    pretty_print: true
  with_subelements:
    - "{{ opn_user | default([]) }}"
    - settings
  notify: local user sync
  when:
    - item.0.uuid is not defined
    - not ansible_local.opnsense.core.product_version is version_compare('25.1', '>=')
    - item.1.value is defined

- name: b64 user fields (legacy by name)
  delegate_to: localhost
  community.general.xml:
    path: "{{ local_config_path }}"
    xpath: "/opnsense/system/user[name/text()='{{ item.0.name }}']/{{ item.1.key }}"
    value: "{{ item.1.b64_value | b64encode }}"
    pretty_print: true
  with_subelements:
    - "{{ opn_user | default([]) }}"
    - settings
  notify: local user sync
  when:
    - item.0.uuid is not defined
    - not ansible_local.opnsense.core.product_version is version_compare('25.1', '>=')
    - item.1.b64_value is defined

- name: user - nextid
  delegate_to: localhost
  community.general.xml:
    path: "{{ local_config_path }}"
    xpath: "/opnsense/system/{{ item.key }}"
    value: "{{ item.value }}"
    pretty_print: true
  with_dict: "{{ opn_nextid }}"
  when:
    - opn_nextid is defined
    - item.key in ['nextuid', 'nextgid']
...
