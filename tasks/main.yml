# vim: tabstop=2 expandtab shiftwidth=2 softtabstop=2 smartindent
---
# - name: Download OPNsense XML sample config
#   get_url:
#     url: https://raw.githubusercontent.com/opnsense/core/master/src/etc/config.xml.sample
#     dest: /tmp/config.xml

- name: fetch
  tags:
    - always
  ansible.builtin.include_tasks:
    file: fetch.yml
    apply:
      tags:
        - fetch
        - always

- name: dnsserver
  tags:
    - always
  ansible.builtin.include_tasks:
    file: dnsserver.yml
    apply:
      tags:
        - dnsserver
        - dns

- name: dyndns
  tags:
    - always
  ansible.builtin.include_tasks:
    file: dyndns.yml
    apply:
      tags:
        - dyndns

- name: user
  tags:
    - always
  ansible.builtin.include_tasks:
    file: user.yml
    apply:
      tags: user

- name: group
  tags:
    - always
  ansible.builtin.include_tasks:
    file: group.yml
    apply:
      tags: group

- name: general
  tags:
    - always
  ansible.builtin.include_tasks:
    file: general.yml
    apply:
      tags: general

- name: sysctl
  tags:
    - always
  ansible.builtin.include_tasks:
    file: sysctl.yml
    apply:
      tags: sysctl

- name: authservers
  tags:
    - always
  ansible.builtin.include_tasks:
    file: authservers.yml
    apply:
      tags: authservers

- name: CAs
  tags:
    - always
  ansible.builtin.include_tasks:
    file: ca.yml
    apply:
      tags:
        - ca
        - cert
        - certificates

- name: OpenVPN
  tags:
    - always
  ansible.builtin.include_tasks:
    file: openvpn.yml
    apply:
      tags:
        - openvpn
        - vpn

- name: IPSec
  tags:
    - always
  ansible.builtin.include_tasks:
    file: ipsec.yml
    apply:
      tags:
        - vpn
        - ipsec

- name: wireguard
  ansible.builtin.include_tasks:
    file: wireguard.yml
    apply:
      tags:
        - vpn
        - wg
        - wireguard
  tags:
    - always

- name: laggs
  tags:
    - always
  ansible.builtin.include_tasks:
    file: laggs.yml
    apply:
      tags:
        - laggs
        - lagg

- name: vlans
  tags:
    - always
  ansible.builtin.include_tasks:
    file: vlans.yml
    apply:
      tags:
        - vlans
        - vlan
  when: opn_interfaces_vlan_parent_interface is defined

- name: interfaces
  tags:
    - always
  ansible.builtin.include_tasks:
    file: interfaces.yml
    apply:
      tags:
        - interfaces
        - interface

- name: bridges
  tags:
    - always
  ansible.builtin.include_tasks:
    file: bridges.yml
    apply:
      tags:
        - bridges
        - bridge

- name: virtualip
  tags:
    - always
  ansible.builtin.include_tasks:
    file: virtualip.yml
    apply:
      tags: virtualip

- name: alias
  tags:
    - always
  ansible.builtin.include_tasks:
    file: alias.yml
    apply:
      tags: alias

- name: filter
  tags:
    - always
  ansible.builtin.include_tasks:
    file: filter.yml
    apply:
      tags: filter

- name: gateways
  tags:
    - always
  ansible.builtin.include_tasks:
    file: gateways.yml
    apply:
      tags:
        - gateways
        - gateway

- name: hasync
  tags:
    - always
  ansible.builtin.include_tasks:
    file: hasync.yml
    apply:
      tags: hasync

- name: dhcpd
  tags:
    - always
  ansible.builtin.include_tasks:
    file: dhcpd.yml
    apply:
      tags:
        - dhcpd
        - dhcp

- name: unbound
  tags:
    - always
  ansible.builtin.include_tasks:
    file: unbound.yml
    apply:
      tags: unbound

- name: syslog
  tags:
    - always
  ansible.builtin.include_tasks:
    file: syslog.yml
    apply:
      tags: syslog

- name: monit
  tags:
    - always
  ansible.builtin.include_tasks:
    file: monit.yml
    apply:
      tags: monit

- name: staticroutes
  tags:
    - always
  ansible.builtin.include_tasks:
    file: staticroutes.yml
    apply:
      tags:
        - staticroutes
        - routing
        - routes
        - route

- name: nat
  tags:
    - always
  ansible.builtin.include_tasks:
    file: nat.yml
    apply:
      tags: nat

- name: haproxy
  tags:
    - always
  ansible.builtin.include_tasks:
    file: haproxy.yml
    apply:
      tags: haproxy

- name: cron
  tags:
    - always
  ansible.builtin.include_tasks:
    file: cron.yml
    apply:
      tags: cron

- name: trim EOF
  delegate_to: localhost
  ansible.builtin.lineinfile:
    state: absent
    insertafter: EOF
    line: ""
    path: "{{ local_config_path }}"
  changed_when: false
  tags: trim

- name: fix xml start tag
  delegate_to: localhost
  ansible.builtin.lineinfile:
    line: '<?xml version="1.0"?>'
    regexp: '^<\?xml.*>'
    insertbefore: BOF
    path: "{{ local_config_path }}"
  changed_when: false
  tags: trim

- name: copy
  ansible.builtin.copy:
    src: "{{ local_config_path }}"
    dest: "{{ config_path }}"
    backup: true
    owner: root
    group: wheel
    mode: "0644"
  register: config
  tags: copy

- name: clean,safe delete  # noqa no-changed-when
  delegate_to: localhost
  ansible.builtin.command: srm "{{ local_config_path }}"
  tags: clean
  when: delete_local_xml_file | default(false)

- name: create handler helper scripts
  ansible.builtin.template:
    src: "{{ item }}.j2"
    dest: "/usr/local/sbin/{{ item }}"
    owner: root
    group: wheel
    mode: "0750"
  tags: copy
  with_items:
    - opnsense_service_mimic.php
    - opnsense_synclocalaccounts.php
  when:
    - config is defined
    - config.changed | bool

- name: sync  # noqa no-handler no-changed-when
  ansible.builtin.command: "{{ item }}"
  throttle: 1
  # loop_control:
  #   pause: 3
  with_items:
    - configctl filter sync
  when: config.changed
  tags:
    - sync
    - copy

- name: reload  # noqa no-handler no-changed-when
  ansible.builtin.command: "{{ item }}"
  throttle: 1
  # loop_control:
  #   pause: 3
  with_items:
    - configctl service reload all
    - configctl webgui restart
  when: config.changed
  tags: reload
...
